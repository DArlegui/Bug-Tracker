//https://www.prisma.io/docs/orm/overview/databases/mysql
//https://authjs.dev/reference/adapter/prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model app_users {
  id        Int    @id @unique(map: "id") @default(autoincrement())
  user_name String @db.VarChar(15)
  password  Bytes  @db.Blob
}

model issues {
  id           Int           @id @unique(map: "id_UNIQUE") @default(autoincrement())
  title        String        @db.VarChar(255)
  description  String        @db.Text
  status       issues_status @default(OPEN)
  createdAt    DateTime?     @db.DateTime(0)
  updatedAt    DateTime?     @db.DateTime(0)
  deleted_flag Int           @default(0)
}

enum issues_status {
  OPEN
  IN_PROGRESS
  CLOSED
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}